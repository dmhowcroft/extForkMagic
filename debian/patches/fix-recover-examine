Description: temporary work around to fix an issue which makes impossible to
             recover or examine Ext4 filesystems. (see #802089)
Author: Roberto Maar <robi6@users.sf.net>
Last-Update: 2015-10-18
Index: ext4magic-0.3.2/src/block.c
===================================================================
--- ext4magic-0.3.2.orig/src/block.c
+++ ext4magic-0.3.2/src/block.c
@@ -130,7 +130,8 @@ int read_block64 ( ext2_filsys fs, blk64
 
 
 
-
+//FIXME : Debian Bug #802089 (temporary work around)
+/*
 errcode_t local_ext2fs_extent_open(ext2_filsys fs, struct ext2_inode inode,
                           ext2_extent_handle_t *ret_handle) {
 
@@ -189,7 +190,7 @@ errcode_t local_ext2fs_extent_open(ext2_
 
         return 0;
 }
-
+*/
 
 static int mark_extent_block(ext2_filsys fs, char *extent_block ){
 	struct ext3_extent_header 	*eh;
@@ -613,7 +614,10 @@ errcode_t local_block_iterate3(ext2_fils
 		int			uninit;
 		unsigned int		j;
 
-		ctx.errcode = local_ext2fs_extent_open(fs, inode, &handle);
+//FIXME : Debian Bug #802089 (temporary work around)
+//		ctx.errcode = local_ext2fs_extent_open(fs, inode, &handle);
+		ctx.errcode = ext2fs_extent_open2(fs,0,&inode,&handle);
+//
 		if (ctx.errcode)
 			goto abort_exit;
 
Index: ext4magic-0.3.2/src/inode.c
===================================================================
--- ext4magic-0.3.2.orig/src/inode.c
+++ ext4magic-0.3.2/src/inode.c
@@ -112,8 +112,10 @@ static void local_dump_extents(FILE *f,
         unsigned int            printed = 0;
         errcode_t               errcode;
 
-	
-        errcode = local_ext2fs_extent_open(current_fs, *inode, &handle);
+//FIXME : Debian Bug #802089 (temporary work around)
+//      errcode = local_ext2fs_extent_open(current_fs, *inode, &handle);
+        errcode = ext2fs_extent_open2(current_fs,0,inode,&handle);
+//
         if (errcode)
                 return;
 
